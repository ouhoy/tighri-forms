{"ast":null,"code":"import cookie from \"js-cookie\";\nimport axios from \"axios\"; // set in the cookie\n\nexport const setCookie = (key, value) => {\n  if (window !== \"undefined\") {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n}; // remove the cookie\n\nexport const removeCookie = key => {\n  if (window !== \"undefined\") {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get from such as stored token \n\nexport const getCookie = key => {\n  if (window !== \"undefined\") {\n    return cookie.get(key);\n  }\n}; //set in local storage\n\nexport const setLocalStorage = (key, value) => {\n  if (window !== \"undefined\") {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; // rm f local storage\n\nexport const removeLocalStorage = key => {\n  if (window !== \"undefined\") {\n    localStorage.removeItem(key);\n  }\n}; //auth user by passing data to cookie and localstorage guring signin\n\nexport const authenticate = (response, next) => {\n  console.log(\"Authenticate helper on signin response \", response);\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  next();\n}; //access\n\nexport const isAuth = () => {\n  if (window !== \"undefined\") {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\naxios.post(`${process.env.REACT_APP_API}/task`, getCookie('token'));\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage(\"user\");\n  next();\n};","map":{"version":3,"sources":["C:/Users/abdel/Desktop/MERN APP/MERN - Auth main/client/src/paths/helpers.js"],"names":["cookie","axios","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","next","console","log","data","token","user","isAuth","cookieChecked","getItem","parse","post","process","env","REACT_APP_API","signout"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAIA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAe;AACpC,MAAGC,MAAM,KAAI,WAAb,EAA0B;AACtBL,IAAAA,MAAM,CAACM,GAAP,CAAWH,GAAX,EAAgBC,KAAhB,EAAsB;AAClBG,MAAAA,OAAO,EAAE;AADS,KAAtB;AAGH;AACJ,CANM,C,CAOP;;AACA,OAAO,MAAMC,YAAY,GAAIL,GAAD,IAAQ;AAChC,MAAGE,MAAM,KAAI,WAAb,EAA0B;AACtBL,IAAAA,MAAM,CAACS,MAAP,CAAcN,GAAd,EAAmB;AACfI,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CANM,C,CAOP;;AACA,OAAO,MAAMG,SAAS,GAAIP,GAAD,IAAQ;AAC7B,MAAGE,MAAM,KAAI,WAAb,EAA0B;AACxB,WAAOL,MAAM,CAACW,GAAP,CAAWR,GAAX,CAAP;AACD;AACJ,CAJM,C,CAKP;;AACA,OAAO,MAAMS,eAAe,GAAG,CAACT,GAAD,EAAMC,KAAN,KAAe;AAC1C,MAAGC,MAAM,KAAI,WAAb,EAA0B;AACxBQ,IAAAA,YAAY,CAACC,OAAb,CAAqBX,GAArB,EAA0BY,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAA1B;AACD;AACJ,CAJM,C,CAKP;;AACA,OAAO,MAAMa,kBAAkB,GAAId,GAAD,IAAQ;AACtC,MAAGE,MAAM,KAAI,WAAb,EAA0B;AACxBQ,IAAAA,YAAY,CAACK,UAAb,CAAwBf,GAAxB;AACD;AACJ,CAJM,C,CAKP;;AACA,OAAO,MAAMgB,YAAY,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAmB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDH,QAAvD;AACAlB,EAAAA,SAAS,CAAC,OAAD,EAAWkB,QAAQ,CAACI,IAAT,CAAcC,KAAzB,CAAT;AACAb,EAAAA,eAAe,CAAC,MAAD,EAAUQ,QAAQ,CAACI,IAAT,CAAcE,IAAxB,CAAf;AACAL,EAAAA,IAAI;AACP,CALM,C,CAMP;;AACA,OAAO,MAAMM,MAAM,GAAG,MAAK;AACvB,MAAGtB,MAAM,KAAK,WAAd,EAA2B;AAC3B,UAAMuB,aAAa,GAAGlB,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAGkB,aAAH,EAAkB;AACd,UAAGf,YAAY,CAACgB,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC5B,eAAOd,IAAI,CAACe,KAAL,CAAWjB,YAAY,CAACgB,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,OAFD,MAEM;AACF,eAAO,KAAP;AACH;AACJ;AACA;AACJ,CAXM;AAYN5B,KAAK,CAAC8B,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,OAAxC,EAAgDxB,SAAS,CAAC,OAAD,CAAzD;AAGD,OAAO,MAAMyB,OAAO,GAAGd,IAAI,IAAG;AAC1Bb,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAS,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAI,EAAAA,IAAI;AACP,CAJM","sourcesContent":["import cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n// set in the cookie\r\nexport const setCookie = (key, value) =>{\r\n    if(window!== \"undefined\") {\r\n        cookie.set(key, value,{\r\n            expires: 1\r\n        })\r\n    }\r\n}\r\n// remove the cookie\r\nexport const removeCookie = (key) =>{\r\n    if(window!== \"undefined\") {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        })\r\n    }\r\n}\r\n// get from such as stored token \r\nexport const getCookie = (key) =>{\r\n    if(window!== \"undefined\") {\r\n      return cookie.get(key)\r\n    }\r\n}\r\n//set in local storage\r\nexport const setLocalStorage = (key, value) =>{\r\n    if(window!== \"undefined\") {\r\n      localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n}\r\n// rm f local storage\r\nexport const removeLocalStorage = (key) =>{\r\n    if(window!== \"undefined\") {\r\n      localStorage.removeItem(key)\r\n    }\r\n}\r\n//auth user by passing data to cookie and localstorage guring signin\r\nexport const authenticate = (response, next) =>{\r\n    console.log(\"Authenticate helper on signin response \", response)\r\n    setCookie(\"token\" , response.data.token)\r\n    setLocalStorage(\"user\" , response.data.user)\r\n    next();\r\n}\r\n//access\r\nexport const isAuth = () =>{\r\n    if(window !== \"undefined\") {\r\n    const cookieChecked = getCookie('token')\r\n    if(cookieChecked) {\r\n        if(localStorage.getItem(\"user\")){\r\n            return JSON.parse(localStorage.getItem(\"user\"))\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n    }\r\n}\r\n axios.post(`${process.env.REACT_APP_API}/task`, getCookie('token'));\r\n\r\n\r\nexport const signout = next =>{\r\n    removeCookie('token')\r\n    removeLocalStorage(\"user\")\r\n    next();\r\n}"]},"metadata":{},"sourceType":"module"}